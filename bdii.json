{
    "types": ["T2/P1", "T2/P2"],
    "questions": [
        {
            "question": "Se denomina transacción a un conjunto de operaciones ...",
            "answers": [
                {"text": "... que forman una unidad lógica de trabajo", "correct": true},
                {"text": "... consecutivas relacionadas por temática", "correct": false},
                {"text": "... a realizar en una Base de Datos desde un lenguaje de programación", "correct": false},
                {"text": "... consecutivas del tipo SELECT ... FROM ... WHERE", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "Una transacción puede realizarse de forma NO completa en el siguiente caso",
            "answers": [
                {"text": "Nunca", "correct": true},
                {"text": "Siempre", "correct": false},
                {"text": "Sólo cuando está aislada", "correct": false},
                {"text": "Siempre que no sea concurrente", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "¿Es posible la ejecución a la vez de varias transacciones?",
            "answers": [
                {"text": "Si, siempre que no se introducen inconsistencias en los datos", "correct": true},
                {"text": "Si, siempre", "correct": false},
                {"text": "Si, siempre que afecten a datos diferentes", "correct": false},
                {"text": "No, nunca", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "O bien todas las operaciones de la transacción se realizan adecuadamente o no lo hace ninguna de ellas",
            "answers": [
                {"text": "Atomicidad (Atomicity)", "correct": true},
                {"text": "Consistencia (Consistency)", "correct": false},
                {"text": "Aislamiento (Isolation)", "correct": false},
                {"text": "No es una definición de una propiedad ACID", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "La ejecución aislada de una transacción, bien codificada, no tiene porqué conservar la consistencia de la base de datos",
            "answers": [
                {"text": "No es una definición de una propiedad ACID", "correct": true},
                {"text": "Atomicidad (Atomicity)", "correct": false},
                {"text": "Consistencia (Consistency)", "correct": false},
                {"text": "Aislamiento (Isolation)", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "Cuando se ejecutan transacciones de forma concurrente, estas comparten los datos comunes ejecutándse todas o ninguna",
            "answers": [
                {"text": "No es una definición de una propiedad ACID", "correct": true},
                {"text": "Atomicidad (Atomicity)", "correct": false},
                {"text": "Consistencia (Consistency)", "correct": false},
                {"text": "Aislamiento (Isolation)", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "Tras el éxito de una transacción, los cambios realizados permanence, incluso aunque se produzcan fallos del sistema",
            "answers": [
                {"text": "Durabilidad (Durability)", "correct": true},
                {"text": "No es una definición de una propiedad ACID", "correct": false},
                {"text": "Consistencia (Consistency)", "correct": false},
                {"text": "Aislamiento (Isolation)", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "¿Qué propiedad ACID es responsabilidad del programador que codifica la transacción?",
            "answers": [
                {"text": "Consistencia (Consistency)", "correct": true},
                {"text": "Atomicidad (Atomicity)", "correct": false},
                {"text": "Aislamiento (Isolation)", "correct": false},
                {"text": "Durabilidad (Durability)", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "Modificación en la BD realizada por transacción vs anotación en registro de la modificación que realizará la transacción",
            "answers": [
                {"text": "Primero se anota en el registro la modificación y luego se ejecuta", "correct": true},
                {"text": "Primero se ejecuta la modificación y luego se anota en el registro", "correct": false},
                {"text": "Se hacen simultáneamente para garantizar la atomicidad y la durabilidad", "correct": false},
                {"text": "El orden no es importante", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "Estado tras descubrir que no puede continuar la ejecución normal (errores de hardware o lógicos)",
            "answers": [
                {"text": "Transacción Fallida", "correct": true},
                {"text": "Transacción Activa", "correct": false},
                {"text": "No es un estado de una transacción", "correct": false},
                {"text": "Transacción Comprometida", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "Estado en que permanence la transacción durante su ejecución",
            "answers": [
                {"text": "Transacción Activa", "correct": true},
                {"text": "Transacción Fallida", "correct": false},
                {"text": "No es un estado de una transacción", "correct": false},
                {"text": "Transacción Comprometida", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "Estado tras descubrir que una transacción ha resultado fallida sólo mientras se consulta el registro de operaciones",
            "answers": [
                {"text": "No es un estado de una transacción", "correct": true},
                {"text": "Transacción Activa", "correct": false},
                {"text": "Transacción Abortada", "correct": false},
                {"text": "Transacción Parcialmente Abortada", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "¿Existe un estado de una transacción denominado \"Parcialmente Comprometida\"?",
            "answers": [
                {"text": "Si, después de terminar pero antes de que la información esté grabada", "correct": true},
                {"text": "Si, tras la ejecución de cada sentencia, salvo la última", "correct": false},
                {"text": "Si, después de la primera sentencia y hasta que se ejecuta la última", "correct": false},
                {"text": "No, del estado \"Activa\" se pasa al estado \"Comprometida\"", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "¿Se pueden deshacer los cambios realizados por una transacción comprmetida?",
            "answers": [
                {"text": "Sólo mediante una transacción compensadora realizada por el usuario", "correct": true},
                {"text": "Retrocediendo la transacción a parcialmente comprometida y abordándola", "correct": false},
                {"text": "El sistema hace transacciones compensadoras cuando detecta la necesidad", "correct": false},
                {"text": "No, nunca: va en contra de la durabilidad", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "¿Cuál NO es una ventaja de la ejecución concurrente de transacciones?",
            "answers": [
                {"text": "Reducción de los fallos del sistema", "correct": true},
                {"text": "Mejora del rendimiento del sistema", "correct": false},
                {"text": "Mejora del uso de los recursos", "correct": false},
                {"text": "Reducción del tiempo de espera", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "¿Qué es una planificación?",
            "answers": [
                {"text": "El orden de ejecución de las instrucciones de un conjunto de transacciones", "correct": true},
                {"text": "El orden de ejecución de las transacciones en un conjunto de transacciones", "correct": false},
                {"text": "El estudio de las concurrencias a nivel de datos de las transacciones", "correct": false},
                {"text": "El estudio de las concurrencias a nivel de transacciones de los datos", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "Todas las planificaciones posibles generan un estado consistente en la base de datos",
            "answers": [
                {"text": "Verdadero", "correct": false},
                {"text": "Falso", "correct": true}
            ],
            "type": 1
        },
        {
            "question": "Todas las planificaciones posibles que generan estados consistentes llegan al mismo final",
            "answers": [
                {"text": "Verdadero", "correct": false},
                {"text": "Falso", "correct": true}
            ],
            "type": 1
        },
        {
            "question": "Planificación secuencial: Secuencia de instrucciones de varias transacciones ...",
            "answers": [
                {"text": "... en la que todas las instrucciones de cada transacción están juntas", "correct": true},
                {"text": "... en la que las instrucciones de lectura de cada transacción están juntas", "correct": false},
                {"text": "... en la que las instrucciones de escritura de cada transacción están juntas", "correct": false},
                {"text": "... en la que las instrucciones de cada transacción están divididas en grupos", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "Una planificación que asegure que la ejecución concurrente tiene el mismo efecto que sin concurrencia se denomina ...",
            "answers": [
                {"text": "... planificación serializable", "correct": true},
                {"text": "... planificación secuencial", "correct": false},
                {"text": "... planificación concurrente", "correct": false},
                {"text": "... planificación aislada", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "Cuando una planificación se puede transformar en otra meidante pasos no conflictivos se dice que ambas son ...",
            "answers": [
                {"text": "... Equivalentes", "correct": true},
                {"text": "... Isomorfas", "correct": false},
                {"text": "... Inconcurrentes", "correct": false},
                {"text": "... Secuenciables", "correct": false}
            ],
            "type": 2
        },
        {
            "question": "Una planificación secuencial es siempre secuenciable",
            "answers": [
                {"text": "Verdadero", "correct": true},
                {"text": "Falso", "correct": false}
            ],
            "type": 2
        },
        {
            "question": "Instrucciones de lectura/escritura en dos transacciones sobre datos diferentes, ¿generan conflictos al intercambiarlas?",
            "answers": [
                {"text": "No, nunca", "correct": true},
                {"text": "Si, siempre", "correct": false},
                {"text": "Si, si las dos son de lectura", "correct": false},
                {"text": "Si, si al menos una es de escritura", "correct": false}
            ],
            "type": 2
        },
        {
            "question": "¿Cuál de las siguientes parejas de instrucciones NO genera conflictos al intercambiarlas?",
            "answers": [
                {"text": "leer(A) en T1 con leer(A) en T2", "correct": true},
                {"text": "leer(A) en T1 con escribir(A) en T2", "correct": false},
                {"text": "escribir(A) en T1 con leer(A) en T2", "correct": false},
                {"text": "escribir(A) en T1 con escribir(A) en T2", "correct": false}
            ],
            "type": 2
        },
        {
            "question": "¿La planificación mostrada es secuenciable? T1=leer(A) T2=leer(C) T1=leer(B) T2=escribir(C) T1=escribir(A) T2=leer(D) T1=escribir(B) T2=escribir(D)",
            "answers": [
                {"text": "Si", "correct": true},
                {"text": "No", "correct": false}
            ],
            "type": 2
        },
        {
            "question": "¿La planificación mostrada es secuenciable? T1=leer(A) T1=escribir(A) T2=leer(A) T2=escribir(A) T1=leer(B) T1=escribir(B) T2=leer(B) T2=escribir(B)",
            "answers": [
                {"text": "Si", "correct": true},
                {"text": "No", "correct": false}
            ],
            "type": 2
        },
        {
            "question": "¿La planificación mostrada es secuenciable? T1=leer(A) T1=leer(B) T2=leer(A) T2=escribir(A) T1=escribir(A) T1=escribir(B) T2=leer(B) T2=escribir(B)",
            "answers": [
                {"text": "Si", "correct": false},
                {"text": "No", "correct": true}
            ],
            "type": 2
        },
        {
            "question": "¿La planificación mostrada es secuenciable? T1=leer(A) T1=A=A-50 T1=escribir(A) T2=leer(B) T2=B=B-10 T2=escribir(B) T1=leer(B) T1=B=B+50 T1=escribir(B) T2=leer(A) T2=A=A+10 T2=escribir(A)",
            "answers": [
                {"text": "Si", "correct": false},
                {"text": "No", "correct": true}
            ],
            "type": 2
        },
        {
            "question": "¿La planificación mostrada genera el mismo resultado que la planificación secuencial T1:T2 (Primero T1, Después T2)? T1=leer(A) T1=A=A-50 T1=escribir(A) T2=leer(B) T2=B=B-10 T2=escribir(B) T1=leer(B) T1=B=B+50 T1=escribir(B) T2=leer(A) T2=A=A+10 T2=escribir(A)",
            "answers": [
                {"text": "Si", "correct": true},
                {"text": "No", "correct": false}
            ],
            "type": 2
        },
        {
            "question": "Para determinar la secuencialidad en cuanto a conflictos de una planificación se puede usar ...",
            "answers": [
                {"text": "... un grafo de precedencia", "correct": true},
                {"text": "... un árbol de precedencia", "correct": false},
                {"text": "... un registro de precedencia", "correct": false},
                {"text": "... una relación de precedencia", "correct": false}
            ],
            "type": 2
        },
        {
            "question": "Las aristras de un grafo de precedencia representan transacciones ...",
            "answers": [
                {"text": "... cun instrucciones no intercambiables por conflictos de lectura/escritura", "correct": true},
                {"text": "... prioritarias en el acceso a los datos", "correct": false},
                {"text": "... cuyo intercambio generaría planificaciones no secuenciables", "correct": false},
                {"text": "... que realizan operaciones con los mismos datos", "correct": false}
            ],
            "type": 2
        },
        {
            "question": "Una planificación recuperable es aquella en la que, si T2 lee datos que ha escrito T1, ...",
            "answers": [
                {"text": "... la transacción T1 se compromete antes que la transacción T2", "correct": true},
                {"text": "... la transacción T2 se compromete antes que la transacción T1", "correct": false},
                {"text": "... la transacción T1 no se compromete", "correct": false},
                {"text": "... la transacción T2 no se compromete", "correct": false}
            ],
            "type": 2
        },
        {
            "question": "¿La planificación mostrada es recuperable? T1=escribir(A) T1=commit T2=leer(A) T2=commit",
            "answers": [
                {"text": "Si", "correct": true},
                {"text": "No", "correct": false}
            ],
            "type": 2
        },
        {
            "question": "¿La planificación mostrada es recuperable? T1=escribir(A) T2=leer(A) T2=commit T1=commit",
            "answers": [
                {"text": "Si", "correct": false},
                {"text": "No", "correct": true}
            ],
            "type": 2
        },
        {
            "question": "¿La planificación mostrada es recuperable? T2=leer(A) T1=escribir(A) T2=commit T1=commit",
            "answers": [
                {"text": "Si", "correct": true},
                {"text": "No", "correct": false}
            ],
            "type": 2
        },
        {
            "question": "Una planificación recuperable sin cascada es aquella en la que, si T2 lee datos que ha escrito T1, ...",
            "answers": [
                {"text": "... la transacción T1 se compromete antes que la operación de lectura T2", "correct": true},
                {"text": "... la operación de escritura de T1 aparece antes de que T2 se comprometa", "correct": false},
                {"text": "... la transacción T1 se compromete antes que la transacción T2", "correct": false},
                {"text": "... la operación de escritura de T1 aparece antes que la operación de lectura de T2", "correct": false}
            ],
            "type": 2
        },
        {
            "question": "¿La planificación mostrada es recuperable sin cascada? T1=escribir(A) T2=leer(A) T1=commit T2=commit",
            "answers": [
                {"text": "Si", "correct": false},
                {"text": "No", "correct": true}
            ],
            "type": 2
        },
        {
            "question": "¿La planificación mostrada es recuperable sin cascada? T1=escribir(A) T1=commit T2=leer(A) T2=commit",
            "answers": [
                {"text": "Si", "correct": true},
                {"text": "No", "correct": false}
            ],
            "type": 2
        },
        {
            "question": "Muchos sistemas de bases de datos se ejecutan, de forma predeterminada, en el nivel de aislamiento ...",
            "answers": [
                {"text": "... lectura comprometida (leer datos comprometidos)", "correct": true},
                {"text": "... secuenciable (normalmente asegura la ejecución secuencial)", "correct": false},
                {"text": "... lectura repetible (comprometida y entre lecturas no hay actualización)", "correct": false},
                {"text": "... lectura no comprometida (permite leer datos no comprometidos)", "correct": false}
            ],
            "type": 2
        },
        {
            "question": "¿Qué nivel de aislamiento permite \"escrituras sucias\" (escribir datos escritos antes por transacción no comprometida)?",
            "answers": [
                {"text": "Ninguno", "correct": true},
                {"text": "Todos", "correct": false},
                {"text": "Sólo lectura no comprometida", "correct": false},
                {"text": "Sólo lectura no repetible", "correct": false}
            ],
            "type": 2
        },
        {
            "question": "Las técnicas básicas de bloqueo sobre datos se pueden mejorar introduciendo dos tipos distintos de bloqueo",
            "answers": [
                {"text": "Compartidos para lectura y exclusivos para escrituras", "correct": true},
                {"text": "Compartidos para escrituras y exclusivos para lecturas", "correct": false},
                {"text": "Multiversión para lecturas e instantáneas para escrituras", "correct": false},
                {"text": "Multiversión para escrituras e instantáneas para lecturas", "correct": false}
            ],
            "type": 2
        },
        {
            "question": "¿Por qué el aislamiento de instantáneas es mejor, en términos de rendimiento, que las técnicas de bloqueo?",
            "answers": [
                {"text": "Porque los intentos de leer datos nunca tienen que esperar", "correct": true},
                {"text": "Porque las transcciones que sólo realizan lecturas se pueden abortar", "correct": false},
                {"text": "Porque la lectura de datos hace que las actualizaciones tengan que esperar", "correct": false},
                {"text": "Porque las técnicas de bloqueo pueden crear estados inconsistentes", "correct": false}
            ],
            "type": 2
        }
    ]
}
